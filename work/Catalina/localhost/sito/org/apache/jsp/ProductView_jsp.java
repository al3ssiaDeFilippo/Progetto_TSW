/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.31
 * Generated at: 2024-04-24 14:32:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import main.javas.ProductBean;

public final class ProductView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("main.javas.ProductBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    Collection<?> products = (Collection<?>) request.getAttribute("products");
    ProductBean product = (ProductBean) request.getAttribute("product");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("    <link href=\"ProductStyle.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("    <title>Storage DS/BF</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<h2>Products</h2>\r\n");
      out.write("<a href=\"product\">List</a>\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("    <tr>\r\n");
      out.write("        <th>Id_prodotto <a href=\"product?sort=id_prodotto&direction=asc\">Sort</a></th>\r\n");
      out.write("        <th>Nome_prodotto <a href=\"product?sort=nome_prodotto&direction=asc\">Sort</a></th>\r\n");
      out.write("        <th>Dettagli <a href=\"product?sort=dettagli&direction=asc\">Sort</a></th>\r\n");
      out.write("        <th>Quantita <a href=\"product?sort=quantita&direction=asc\">Sort</a></th>\r\n");
      out.write("        <th>Categoria <a href=\"product?sort=categoria&direction=asc\">Sort</a></th>\r\n");
      out.write("        <th>Prezzo <a href=\"product?sort=prezzo&direction=asc\">Sort</a></th>\r\n");
      out.write("        <th>Iva <a href=\"product?sort=iva&direction=asc\">Sort</a></th>\r\n");
      out.write("        <th>Sconto <a href=\"product?sort=sconto&direction=asc\">Sort</a></th>\r\n");
      out.write("        <th>Action</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("    ");

        if (products == null || !products.iterator().hasNext()) {
    
      out.write("\r\n");
      out.write("    <tr>\r\n");
      out.write("        <td colspan=\"9\">No products available</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    ");

    } else {
        Iterator<?> it = products.iterator();
        while (it.hasNext()) {
            ProductBean bean = (ProductBean) it.next();
    
      out.write("\r\n");
      out.write("    <tr>\r\n");
      out.write("        <td>");
      out.print(bean.getCode());
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print(bean.getProductName());
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print(bean.getDetails());
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print(bean.getQuantity());
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print(bean.getCategory());
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print(bean.getPrice());
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print(bean.getIva());
      out.write("</td>\r\n");
      out.write("        <td>");
      out.print(bean.getDiscount());
      out.write("</td>\r\n");
      out.write("        <td><a href=\"product?action=delete&code=");
      out.print(bean.getCode());
      out.write("\">Delete</a><br>\r\n");
      out.write("            <a href=\"product?action=read&code=");
      out.print(bean.getCode());
      out.write("\">Details</a>\r\n");
      out.write("        </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    ");

            }
        }
    
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<h2>Insert</h2>\r\n");
      out.write("<form action=\"product\" method=\"post\">\r\n");
      out.write("    ");
      out.write("<input type=\"hidden\" name=\"action\" value=\"insert\">\r\n");
      out.write("\r\n");
      out.write("    <label for=\"nome_prodotto\">Nome:</label><br>\r\n");
      out.write("    <input name=\"productName\" type=\"text\" maxlength=\"20\" required placeholder=\"enter name\"><br>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"dettagli\">Dettagli:</label><br>\r\n");
      out.write("    <textarea name=\"details\" maxlength=\"100\" rows=\"3\" required placeholder=\"enter description\"></textarea><br>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"quantita\">Quantita:</label><br>\r\n");
      out.write("    <input name=\"quantity\" type=\"number\" min=\"1\" value=\"1\" required><br>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"categoria\">Categoria:</label><br>\r\n");
      out.write("    <input id=\"anime\" name=\"category\" type=\"radio\" value=\"anime\"> Anime<br>\r\n");
      out.write("    <input id=\"film\" name=\"category\" type=\"radio\" value=\"film\"> Film<br>\r\n");
      out.write("    <input id=\"giochi\" name=\"category\" type=\"radio\" value=\"giochi\"> Giochi<br>\r\n");
      out.write("    <input id=\"fumetti\" name=\"category\" type=\"radio\" value=\"fumetti\"> Fumetti<br>\r\n");
      out.write("    <input id=\"serie_tv\" name=\"category\" type=\"radio\" value=\"serie_tv\"> Serie TV<br>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"prezzo\">Prezzo:</label><br>\r\n");
      out.write("    <input name=\"price\" type=\"number\" min=\"0\" value=\"0\" required><br>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"iva\">Iva</label><br>\r\n");
      out.write("    <input name=\"iva\" type=\"number\" min=\"0\" value=\"0\" required><br>\r\n");
      out.write("\r\n");
      out.write("    <label for=\"sconto\">Sconto</label><br>\r\n");
      out.write("    <input name=\"discount\" type=\"number\" min=\"0\" value=\"0\"><br>\r\n");
      out.write("\r\n");
      out.write("    <input type=\"submit\" value=\"Add\"><input type=\"reset\" value=\"Reset\">\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
